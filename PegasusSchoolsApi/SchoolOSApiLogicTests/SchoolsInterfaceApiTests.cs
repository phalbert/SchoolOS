using Microsoft.VisualStudio.TestTools.UnitTesting;
using SchoolOSApiLogic;
using SchoolOSApiLogic.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SchoolOSApiLogic.Tests
{
    [TestClass()]
    public class SchoolsInterfaceApiTests
    {

        [TestMethod()]
        public void SaveSchoolTest()
        {
            SchoolsInterfaceApi schApi = new SchoolsInterfaceApi();
            School sch = new School();
            sch.SchoolName = "TEST SCHOOl";
            sch.ModifiedBy = "admin";
            sch.VendorPassword = "TEST";
            sch.SchoolCode = "TEST_SCHOOL";
            sch.SchoolEmail = "nsubugak@yahoo.com";
            sch.SchoolID = "";
            sch.SchoolLocation = "pegasus tech";
            sch.SchoolPhone = "0785975800";
            sch.UnebCentreNumber = "123444";
            sch.VendorCode = "TEST";
            sch.SchoolLogo = "data: image / jpeg; base64,/ 9j / 4AAQSkZJRgABAQAAAQABAAD / 2wBDAAICAgICAgICAgIDAgICAwQDAgIDBAUEBAQEBAUGBQUFBQUFBgYHBwgHBwYJCQoKCQkMDAwMDAwMDAwMDAwMDAz / 2wBDAQMDAwUEBQkGBgkNCwkLDQ8ODg4ODw8MDAwMDA8PDAwMDAwMDwwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz / wgARCAE2AlgDAREAAhEBAxEB / 8QAHQABAAEEAwEAAAAAAAAAAAAAAAgFBgcJAgMEAf / EABsBAQACAwEBAAAAAAAAAAAAAAABAwIEBQYH / 9oADAMBAAIQAxAAAAGfwAAAAAAAAAAAAAABbF0Yd6NeIt / DHW5jY2zjQrY65enGbpom + 9XLJ2lll7QzyzoZ1PCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAOiWDenXF / t1Yd6GHiygDql0S9mIdMuyHIFwVTn7lWSj4luRtPP6AAAAAAAAAAAAAAAAAAAAAAAAAADiYV6VcMPRU403cPh8KvXNx1T45SI5NnrxmIffop2aaHnL7cuxj / wBauk5qbnHfDvhIDk2zL89de2tkAAAAAAAAAAAAAAAAAAAAAAAAAKPZEHvS0R069XCQzZzbMKdKvZD4 / ahZ6KjL + hn5MmWefnDP0dFibWO0jxG1Hbr14O6WE4fNX4U6VcPPQ09kO2FVwmZnnLpScS7mAAAAAAAAAAAAAAAAAAAAAAAAY + 28dfHrNbH + 1jxOROjzOxg7o4Z65mdEseOYt26EqzWip3KujJOzy9 + M9uKjDG + zjJ3kWRd7VXthiPfwtq6ORIrkWzq8xfU8JAAAAAAAAAAAAAAAAAAAAAAAxju4a5vX61v2xwLsoyml5u + x9nGkWReVEwY9NRdNM2zdHE88vVAeeXIv7Vyzvy7MEdOud3mNiAXqNec3m79cHsNb24PRDMPPz2I + R2athIAAAAAAAAAAAAAAAAAAAAAGPtvHWz7HVt22Lz18peeeuxbv43PrziPo4Wnfjj / bx4HuxnKujllPRzuWmfVip2aydnHFe9hjXcx7D4Sa4tueuXZEXvVTE8 / bjrcxhN6SjthmfnWbEvI7HvxkAAAAAAAAAAAAAAAAAAAACjWRrQ9lq2Bt4 + HJITk2S54F1p3xGbtVYc6NdPyZF1Mpa8G6QPJsquEgDgWFtY2jsY8zDfQwix3KqPZHTKT3FttG + OJivfwpmcdsJQcS2c / mdj6AAAAAAAAAAAAAAAAAAAAcCBHqdeOPYq9 + Mzi8zfZ98eaUeevVZW1j7sJnB5q + THFt7QADplF7tVYJ6ldq341qqZGci3OXNzh / 6CmL / aq9MJdcC7DPRwyXpZXNTlDH0VHqhsB8psyE5NgAAAAAAAAAAAAAAAAAAAGD + lXrq9frdEpKca2yroz / AMyyH3oaKHbF462WyHx + zfOtkAABjXcwgz6anEPQrkLybMd7ePoxmfvlr8j6ece + tXr / APV63iyS98 / dlDSzxxuYRR7tVPyi6actofidqvVSAAAAAAAAAAAAAAAAAAB55jWR7TWxtuYSA5VlgbMSz4VuPNzGJHepvbWy2deL2q9VIAAHwjz1q4Lem16dZG0 / w + 3A31GviToYT18tsSK5Fowz0a9bvsNbx5J4eX2IK + nonv5a + FXo6KJbEuOBdM / zt4AAAAAAAAAAAAAAAAAAGA + pXrz9breiJ2R + O2cabuEMPRU0qyKjhO0fxG1emvkAAABgDq1wh9JRdFMzw8vsasvcalfpmeXl9iQHKs + gjP2aoD + q1 / sJ4eX2KbnFFtiHnoKbhqnah4fbrtUgAAAAAAAAAAAAAAAAAcTXH6 / Wwt0q + yFUwm79fL4jF + 9jsC8nsSP5FoAAAAsvZxi12a4x9umR3HtuGqaBZEpONbkHUyA + Gu / 1utgTq116qbbuiRfHtw / 0a7eticXmb5TcS4AAAAAAAAAAAAAAAAAC1L8dVfudXwZRPfy2xFTuVfTHG5hkjTz2eeK2uwAAAAAsTaxsXZxzpzLLO2MfXiuanL6AC0NjHVH7nUqOM7CvJbEc + thHXs0 / DLGhnst8btcgAAAAAAAAAAAAAAAAARt7FUCfU6 / phsD8nsxy69fuhGjs1bDfJbMheTYAPh0zHVIdsT3Q + gHE5HVLpmO / GewAA17 + s1o / 9Wu + NXKcfmr7SviBXqdeo4Tta8Nt3JTIAAAAAAAAAAAAAAAAAgh6jXjN2arhqm / 9PO5KZj516vdjO2vwW37sZHVKJPdpxdu492KqQ6pUbJ5M2WNDLNXPzi / 2a7w15mT5 + 7Ge5jFLuVdAmJPca3MXPzAwh0q9bfsdaTXFts++JN8a2CHqNfyZRsT8js515lgAAAAAAAAAAAAAAAAA1k + z1cV72GY + dZI7kWcJQH9Tr565dmxryGyKBbEAvUUUS7Genl9iz9jG0tiKjg7sVIti07oif3qpi + euylpZ5l52dn7GOFOlhdmvNAuiL / YrzxzLJacK3kUzONR / vdPkSg4d2Md3HDvSr9OKZ3nb5dcC4AAAAAAAAAAAAAAAADqlqq9xqWJtYzf81fivewjt16 / ZilvwLpoedvEJvRU5w52eIt / DJWnlZmzjU8J9GL1Q8OSt1zCf0dMz / O2 + mJs7YxuzXyoNsUO2PhJTj2QW9JTN / wA5deevlxNXXttTH23jPvyuxkHUyh56GnA / UrkzxbZ3eY2AAAAAAAAAAAAAAAAAKPZGqj3OpRLIvzVzmZ527H23jDT0VE8 / L7Em + LaIm9yrJ + nlj3axrGCi2xUcJp + UcJVLCfVihx6GqZvnbcE9TCNXZqvXVymBwLvPMWfsRMjz10C / UUTr8xfVsJGuT1 + tg / p1yL41ue + XZDH0dFk7OOfeVZsM8nsgAAAAAAAAAAAAAAAAUK2NVHudSjWRKvhXYd6NeO9vHolsA8rsSP49owV067dui4aZsvZxqWE9cvpxO6HvwQx9FTNHzt2C + nhG3s1XTRMyvO3 / AEsHaxmf52 / Xn6vX2HeT2OwGvD1utHzrVy14N3KGJd / DFW / hnbl2bFPI7IAAAAAAAAAAAAAAAAFKzjVR7nUodscTmfDrlOzy + xKDi2jGW7hgDp4SJ5Vke + pXXMFVwnyzFXwmj2RcdOUJ / R0zU87dgDq1R261dfqma / m7 / Pktu6Je + fu1yet19jnktjkfDXD7DWwv0a + uXKH0EgOVZP7ymxjrcxyfpZgAAAAAAAAAAAAAAAcDVZ7nUs3YxAH0lbwrptebvFo34wz9DVbt + Ns2xlPRz8EvDbHKHbjPhsjEXQrzdy7LC28ca7uHtxmQnHt9mKP / AF65neduwR1K9ivkdkcTVj7jUsfZxAAyDqZdEvdjO0DxW0AAAAAAAAAAAAAAAANaPstXEu / gABmLn57JvHbQ8eUad / oOnkrSzmt5u65apr9U1uqffitm6IydmvCvSrk / xbbP2Ihx6GivVTsy8ZtW7dGMdzGDfp9eQXJt2F + T2BD30FMPfQ0dYPh5cndDK + hnU8Jt27HaL4nbAAAAAAAAAAAAAAAAEHfS0RZ7lIAHfE7MfGbPM + wsbaijWRTclLsil2R0RPmyi37olBxbby15j91MI79iqxNrH04pScS2uVTdWvldVM3przdNGQ1Ye31LG2sR7cZlDxLcq6OWYOfZclMw19FRgDq17SvEbYAAAAAAAAAAAAAAAAj51q9fXq9YAdUq5VPYejGeaOKeuXWjsO2JqGE1XBcVM12mbgqmrVz7sXcd2M + mHCXlmKdmotkUC2KBdGFulX7MZrFTjLbH4TcAEPPQUxx7FW1Hw + 2AAAAAAAAAAAAAAAALftjVV7nUpmcDoltX8Nt3lr5dsAOuXTMd + M + XKOmXiyUuyPFkpNkW9bFNzjzypub6dZ8lUMHbCu1zXqprtU1iua1Utm + NYHtdXbf4LcAERO / TGfs1bU / D7YAAAAAAAAAAAAAAAo9kRx69Ud + vXiDoYeeXdDhLbh4HcuKqQPhr09Xr8DNfOzjv16pF8i2MPaqrFc37qZZM08o / 9SurVzIjl2RQ7lWRdLK1diLkrZX0M4wdmrP3Ksl1wrgBa1 + Orz2urts8HuDqMd7mMMPRUWJtY7U / D7YAAAAAAAAAAAAAAA1ge11bN2Mc9cuzPXLsyXpZVeudUvutTad4fauenID4Q679ODOnhmbn5Yh38ZV8K2G3o6OlOwryl8FfTU5O0ssf7eOXufnXq5uGiYw9ynIulZnTmZxu7FVFsbGfJbH0Aty6NT / utORXItszZxsPaxte6MoaWcruFbJLj2gAAAAAAAAAAAAAADVd7jUkrxrZecC4Aaivfae0vxG1dVGXwAjj168a7mGdOZZH / rV3zqZdMsjamXsxY33Mc4c3PDe / hnDnZxR7tWTdHOm2Rj7axzpzM8G9PDMfPzz3y7ABRrI1Fe + 0 + 6GeeXZmTnZ5j5 + eRNPPsAAAAAAAAAAAAAAAANWnt9SRPItmF5 + 4AakPe6cmONbR7Is / Yxti5SbI8eUfSr1ZAcT6jmcZdZzh7MZrGCuVTXqpqlc1XBUcZ9WLmdJS7Ioti0djHAfUrv7Vy2e + K2vfjIAAAAAAAAAAAAAAAAA1ce21JAcqyY / nr / h0TFq3xrD9rq0SyPoB5sgqGCVPDumD5 + 6q1yB8OMvLMUuxSM4plkUWyLdujGW5jFLu09Uuw + w6ZD6D0xOx7x + zmHn5gAAAAAAAAAAAAAAAAAav / a6uaubnkjTyjx168QdDCg2xWK58OUAfCc / mdik5xDj0VHiyVauZRcS2TnFtvLXy7oAAeLKMWb2MVe5THzrV9sL31spN8S6P3WqxVv4dkB9Jkeevl / 5 + 4AAAAAAAAAAAAAAAAAAaxvaauL93Cv1Tnjl2Zr5ueS9PP24tcXr9aw9rEZO0s80cyynZxSbI4ZI5derhLzyvXWyv3Vyuuiapgt62LTvjHO5jQbY7CqVTc9U3DTM6 / MbEXuxVh / p12DtYiSnGtnf5fY7QAAAAAAAAAAAAAAAAAAQ49DRlfQzzHz8 / bjIAtDYx1x + v1rC2sRLngXX5q5XLTlE3uU5q5 + dOziNXZrtS / HyZO2HRL24uJ2wvPXykdx7fpk3Sy13et15l + duxXv4R / wCrX3wkdx7Z4 + Xv9MSAAAAAAAAAAAAAAAAAAAAAABbtsQD9Vr4V6VfRLolPPy + xXKpp2cYX3sZC8zPWt7LV2HeS2cUb2F462UTO / Tzhs + 8XtQs9BVJLkWeGVm7eAiH36aDbHdCXnAumD5 +/ ugAAAAAAAAAAAAAAAAAAAAAAAB55iI / fqiN36fDlHnl7MZlpwbcgameNd3CJHfp2K + Q2Y / 8AVrzry7ISem17v18piedvpVkJYh38Is9ynzy74Xjr5Tn8xfm / m2fQAAAAAAAAAAAAAAAAAAAAAAAAAWDtYw49DRgPq19EvLk5Q5nvwnPfLzrNc3lq5RJ9BTe + rlbV0JWbsY8jshW65lNw7ZX8K6sVyAAAAAAAAAAAAAAAAAAAAAAAAAABxMc7mEaOzXgLq12pfj8BxPkuo9EPh9B3wyJqZyL49kj + RbcdMgAAAAAAAAAAAAAAAAAAAAAAAAAAAACkWRgXqVx / 6teLd7C3rYAHaXfr5Zi52ciuRbl3Qz74AAAAAAAAAAAAAAAf / ";
            Result result = schApi.SaveSchool(sch);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveSchoolTestInvalidData()
        {
            SchoolsInterfaceApi schApi = new SchoolsInterfaceApi();
            School sch = new School();
            Result result = schApi.SaveSchool(sch);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod]
        public void SaveStudentTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();

            Student std = new Student();
            std.SchoolCode = "TEST_SCHOOL";
            std.StudentName = "John";
            std.StudentNumber = "1002";
            std.ClassCode = "s3";
            std.StreamCode = "3c";
            std.DateOfBirth = "1999-10-02";
            std.StudentCategory = "day";
            std.PegPayStudentNumber = "s1000";
            std.VendorCode = "TEST";
            std.ModifiedBy = "Peter";

            Result result = stdApi.SaveStudent(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);


        }


        [TestMethod()]
        public void SaveStudentTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            Student std = new Student();
            Result result = stdApi.SaveStudent(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }



        [TestMethod]
        public void SaveSchoolClassTest()
        {
            SchoolsInterfaceApi schclsapi = new SchoolsInterfaceApi();

            SchoolClass schcls = new SchoolClass();

            schcls.SchoolCode = "TEST_SCHOOL";
            schcls.ClassCode = "S4";
            schcls.SchoolClassName = "senior Four";
            schcls.ModifiedBy = "Peter";


            Result result = schclsapi.SaveSchoolClass(schcls);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);


        }

        [TestMethod()]
        public void SaveSchoolClassTestInvalidData()
        {
            SchoolsInterfaceApi schApi = new SchoolsInterfaceApi();
            SchoolClass cls = new SchoolClass();
            Result result = schApi.SaveSchoolClass(cls);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }
        [TestMethod()]
        public void SaveSchoolSemesterTest()
        {
            SchoolsInterfaceApi schclsapi = new SchoolsInterfaceApi();

            SchoolSemester sem = new SchoolSemester();

            sem.SchoolCode = "TEST_SCHOOL";
            sem.SemesterCode = "2017_Term3";
            sem.StartDate = "2017-10-08";
            sem.Enddate = "2017-12-16";
            sem.ModifiedBy = "Peter.K";


            Result result = schclsapi.SaveSchoolSemester(sem);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);


        }
        [TestMethod()]
        public void SaveSchoolSemesterTestInvalidData()
        {
            SchoolsInterfaceApi schApi = new SchoolsInterfaceApi();
            SchoolSemester schsem = new SchoolSemester();
            Result result = schApi.SaveSchoolSemester(schsem);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveSubjectTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            Subject sub = new Subject();
            Result result = stdApi.SaveSubject(sub);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveSystemUserTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SystemUser user = new SystemUser();
            Result result = stdApi.SaveSystemUser(user);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveClassStreamTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            ClassStream stream = new ClassStream();
            Result result = stdApi.SaveClassStream(stream);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveSchoolStaffTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SchoolStaff staff = new SchoolStaff();
            Result result = stdApi.SaveSchoolStaff(staff);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveSubjectTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            Subject sub = new Subject();
            sub.ModifiedBy = "admin";
            sub.SchoolCode = "TEST_SCHOOL";
            sub.SubjectCode = "TEST_SUBJECT";
            sub.SubjectName = "Test Subject";

            Result result = stdApi.SaveSubject(sub);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveSystemUserTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SystemUser user = new SystemUser();
            user.Username = "nsubugak@yahoo.com";
            user.UserPassword = "T3rr1613";
            user.UserType = "ADMIN";
            user.UserCategory = "ADMIN";

            Result result = stdApi.SaveSystemUser(user);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveClassStreamTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            ClassStream stream = new ClassStream();
            stream.ModifiedBy = "admin";
            stream.SchoolCode = "TEST_SCHOOL";
            stream.StreamCode = "TEST_STREAM";
            stream.StreamName = "test stream";
            stream.ClassCode = "TEST_CLASS";
            Result result = stdApi.SaveClassStream(stream);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveSchoolStaffTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SchoolStaff staff = new SchoolStaff();
            staff.Email = "nsubugak@yahoo.com";
            staff.FullName = "Test Staff";
            staff.Gender = "MALE";
            staff.ModifiedBy = "admin";
            staff.PegPayStaffIDNumber = "12345";
            staff.PhoneNumber = "0785975800";
            staff.ProfilePic = "";
            staff.SchoolCode = "TEST_SCHOOL";
            staff.StaffCategory = "TEACHING_STAFF";
            staff.StaffIDNumber = "12345";
            staff.StaffType = "FULL_TIME";

            Result result = stdApi.SaveSchoolStaff(staff);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveUserTypeTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            UserType std = new UserType();
            std.SchoolCode = "TEST_SCHOOL";
            std.UserTypeCode = "ADMIN";
            std.UserTypeName = "Administrator";
            Result result = stdApi.SaveUserType(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveUserTypeTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            UserType std = new UserType();
            Result result = stdApi.SaveUserType(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveMainLinkTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            MainLink std = new MainLink();
            std.SchoolCode = "TEST_SCHOOL";
            std.MainLinkCode = "ADMIN";
            std.MainLinkName = "Administrator";
            Result result = stdApi.SaveMainLink(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveMainLinkTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            MainLink std = new MainLink();
            Result result = stdApi.SaveMainLink(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveSubLinkTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SubLink std = new SubLink();
            std.SchoolCode = "TEST_SCHOOL";
            std.SubLinkCode = "ADMIN";
            std.SubLinkName = "Administrator";
            std.URL = "https://google.com";
            Result result = stdApi.SaveSubLink(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveSubLinkTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SubLink std = new SubLink();
            Result result = stdApi.SaveSubLink(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveMenuTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            MenuItem std = new MenuItem();
            std.SchoolCode = "TEST_SCHOOL";
            std.UserType = "ADMIN";
            Result result = stdApi.SaveMenu(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveMenuTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            MenuItem std = new MenuItem();
            Result result = stdApi.SaveMenu(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveSchoolFeeTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SchoolFee std = new SchoolFee();
            std.SchoolCode = "TEST_SCHOOL";
            std.CurrencyCode = "UGX";
            std.FeeAmount = "1000";
            std.FeeCategory = "TUITION";
            std.FeeID = "1234";
            std.FeeName = "Tuition Fees";
            std.FeeType = "";
            std.ModifiedBy = "admin";
            Result result = stdApi.SaveSchoolFees(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveSchoolFeeTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SchoolFee std = new SchoolFee();
            Result result = stdApi.SaveSchoolFees(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void SaveStudentFeeTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            StudentFee std = new StudentFee();
            std.SchoolCode = "TEST_SCHOOL";
            std.FeeID = "1234";
            std.ModifiedBy = "admin";
            std.StudentID = "21000000261";
            Result result = stdApi.SaveStudentFees(std);
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void SaveStudentFeeTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            StudentFee std = new StudentFee();
            Result result = stdApi.SaveStudentFees(std);
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }

        [TestMethod()]
        public void LoginTest()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SystemUserDetails result = stdApi.Login("Nsubugak","T3rr1613");
            Assert.AreEqual(Globals.SUCCESS_STATUS_DESC, result.StatusDesc);
        }

        [TestMethod()]
        public void LoginTestInvalidData()
        {
            SchoolsInterfaceApi stdApi = new SchoolsInterfaceApi();
            SystemUserDetails result = stdApi.Login("", "");
            Assert.AreEqual(Globals.FAILURE_STATUS_CODE, result.StatusCode);
        }
    }
}